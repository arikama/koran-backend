// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/arikama/koran-backend/daos"
	"github.com/arikama/koran-backend/favorite"
	"github.com/arikama/koran-backend/managers"
	"github.com/arikama/koran-backend/services"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from wire.go:

func wireUserDaoImpl() (*daos.UserDaoImpl, error) {
	db, err := NewDb()
	if err != nil {
		return nil, err
	}
	userDaoImpl, err := daos.NewUserDaoImpl(db)
	if err != nil {
		return nil, err
	}
	return userDaoImpl, nil
}

func wireGoogleAuthServiceImpl() (*services.GoogleAuthServiceImpl, error) {
	googleAuthServiceImpl, err := services.NewGoogleAuthServiceImpl()
	if err != nil {
		return nil, err
	}
	return googleAuthServiceImpl, nil
}

func wireQuranManagerImpl(csvDir string) (*managers.QuranManagerImpl, error) {
	quranManagerImpl, err := managers.NewQuranManagerImpl(csvDir)
	if err != nil {
		return nil, err
	}
	return quranManagerImpl, nil
}

func wireUserManagerImpl() (*managers.UserManagerImpl, error) {
	db, err := NewDb()
	if err != nil {
		return nil, err
	}
	userDaoImpl, err := daos.NewUserDaoImpl(db)
	if err != nil {
		return nil, err
	}
	userManagerImpl, err := managers.NewUserManagerImpl(userDaoImpl)
	if err != nil {
		return nil, err
	}
	return userManagerImpl, nil
}

func wireFavDaoImpl() (*favorite.FavDaoImpl, error) {
	db, err := NewDb()
	if err != nil {
		return nil, err
	}
	favDaoImpl, err := favorite.NewFavDaoImpl(db)
	if err != nil {
		return nil, err
	}
	return favDaoImpl, nil
}

func wireFavManagerImpl() (*favorite.FavManagerImpl, error) {
	db, err := NewDb()
	if err != nil {
		return nil, err
	}
	favDaoImpl, err := favorite.NewFavDaoImpl(db)
	if err != nil {
		return nil, err
	}
	userDaoImpl, err := daos.NewUserDaoImpl(db)
	if err != nil {
		return nil, err
	}
	favManagerImpl, err := favorite.NewFavManagerImpl(favDaoImpl, userDaoImpl)
	if err != nil {
		return nil, err
	}
	return favManagerImpl, nil
}
