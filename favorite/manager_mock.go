// Code generated by MockGen. DO NOT EDIT.
// Source: ./manager.go

// Package favorite is a generated GoMock package.
package favorite

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// FavManagerMock is a mock of FavManager interface.
type FavManagerMock struct {
	ctrl     *gomock.Controller
	recorder *FavManagerMockMockRecorder
}

// FavManagerMockMockRecorder is the mock recorder for FavManagerMock.
type FavManagerMockMockRecorder struct {
	mock *FavManagerMock
}

// NewFavManagerMock creates a new mock instance.
func NewFavManagerMock(ctrl *gomock.Controller) *FavManagerMock {
	mock := &FavManagerMock{ctrl: ctrl}
	mock.recorder = &FavManagerMockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *FavManagerMock) EXPECT() *FavManagerMockMockRecorder {
	return m.recorder
}

// CreateFav mocks base method.
func (m *FavManagerMock) CreateFav(email string, surah, verse int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFav", email, surah, verse)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateFav indicates an expected call of CreateFav.
func (mr *FavManagerMockMockRecorder) CreateFav(email, surah, verse interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFav", reflect.TypeOf((*FavManagerMock)(nil).CreateFav), email, surah, verse)
}

// DeleteFav mocks base method.
func (m *FavManagerMock) DeleteFav(id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFav", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFav indicates an expected call of DeleteFav.
func (mr *FavManagerMockMockRecorder) DeleteFav(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFav", reflect.TypeOf((*FavManagerMock)(nil).DeleteFav), id)
}

// GetFavs mocks base method.
func (m *FavManagerMock) GetFavs(email string) ([]*Fav, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFavs", email)
	ret0, _ := ret[0].([]*Fav)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFavs indicates an expected call of GetFavs.
func (mr *FavManagerMockMockRecorder) GetFavs(email interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFavs", reflect.TypeOf((*FavManagerMock)(nil).GetFavs), email)
}
